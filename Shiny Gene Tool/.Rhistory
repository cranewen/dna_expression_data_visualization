return(desc_cond_list)
}
listTest <- unlist(getList_desc_conditions(experiments_desc))
listTest
getList_desc_conditions <- function(descriptions){
# desc_cond_list <- list()
conditions_list <- list()
for(i in 1:length(descriptions)){
conditions <- condition %>% inner_join(gene_expression, by = c('id' = 'condition_id')) %>%
inner_join(gene, by = c('gene_id'= 'id')) %>%
inner_join(experiment, by = c('experiment_id' = 'id')) %>%
filter(description == descriptions[[i]] & name.y == 'DCN') %>% distinct(name.x)
conditions_list[[i]] = conditions$name.x
}
desc_cond_list <- rbind(descriptions, conditions_list)
newlist <- apply(desc_cond_list, 2, function(x){paste(x$descriptions,"-",x$conditions_list)})
return(desc_cond_list)
}
listTest <- unlist(getList_desc_conditions(experiments_desc))
listTest
getList_desc_conditions(experiments_desc)
conditionsTest <- conditions <- condition %>% inner_join(gene_expression, by = c('id' = 'condition_id')) %>%
inner_join(gene, by = c('gene_id'= 'id')) %>%
inner_join(experiment, by = c('experiment_id' = 'id')) %>%
filter(description == descriptions[[i]] & name.y == 'DCN') %>% distinct(name.x)
runApp()
conditionsTest <- conditions <- condition %>% inner_join(gene_expression, by = c('id' = 'condition_id')) %>%
inner_join(gene, by = c('gene_id'= 'id')) %>%
inner_join(experiment, by = c('experiment_id' = 'id')) %>%
filter(description == 'DB2 mice Gastic sample 35-plex  1-29-16' & name.y == 'DCN') %>% distinct(name.x)
experiments_desc <- list('DB2 mice Gastic sample 35-plex  1-29-16', 'mdx mice Gastic sample 35-plex  3-18-16')
getList_desc_conditions <- function(descriptions){
# desc_cond_list <- list()
conditions_list <- list()
for(i in 1:length(descriptions)){
conditions <- condition %>% inner_join(gene_expression, by = c('id' = 'condition_id')) %>%
inner_join(gene, by = c('gene_id'= 'id')) %>%
inner_join(experiment, by = c('experiment_id' = 'id')) %>%
filter(description == descriptions[[i]] & name.y == 'DCN') %>% distinct(name.x)
conditions_list[[i]] = conditions$name.x
}
desc_cond_list <- rbind(descriptions, conditions_list)
newlist <- apply(desc_cond_list, 2, function(x){paste(x$descriptions,"-",x$conditions_list)})
return(desc_cond_list)
}
listTest <- unlist(getList_desc_conditions(experiments_desc))
listTest
getList_desc_conditions(experiments_desc)
getList_desc_conditions(experiments_desc)[,1]$conditions_list
getList_desc_conditions(experiments_desc)[,1]$conditions_list[1]
getList_desc_conditions(experiments_desc)[,1]$conditions_list[2]
barCharListDat <- getList_desc_conditions(experiments_desc)
barCharDatList <- list()
for(i in 1:length(dim(barCharListDat))){
barCharDatList[[i]] <- getBarChartDat(barCharListDat[,i]$descriptions, barCharListDat[,i]$conditions_list)
}
for(i in 1:length(dim(barCharListDat))){
barCharDatList[[i]] <- getBarChartDat(unlist(barCharListDat[,i]$descriptions), unlist(barCharListDat[,i]$conditions_list))
}
barCharListDat[,1]
barCharListDat[,2]
barCharListDat[,3]
dat1 <- gene_expression %>% inner_join(gene, by = c("gene_id" = "id")) %>%
inner_join(condition, by = c("condition_id" = "id")) %>%
inner_join(experiment, by = c("experiment_id" = "id")) %>%
filter(description == "mdx mice Gastic sample 35-plex  3-18-16" &
name.y %in% c("NORMAL", "MDX", "MDX/1973 (3)", "MDX/1973 (1)", "MDX/1973(0.3)", "MDX/TADANAFIL (5)") & name.x == 'DCN') %>%
select(expression, name.y, description)
colnames(dat1) <- c('expression', 'condition', 'description')
View(dat1)
class(barCharListDat)
class(barCharListDat[,1])
unlist(barCharListDat[,1]$conditions_list)
class(unlist(barCharListDat[,1]$conditions_list))
barCharDatList <- list()
for(i in 1:length(dim(barCharListDat))){
barCharDatList[[i]] <- getBarChartDat(barCharListDat[,i]$descriptions, barCharListDat[,i]$conditions_list)
}
for(i in 1:length(dim(barCharListDat))){
barCharDatList[[i]] <- getBarChartDat(list(barCharListDat[,i]$descriptions), list(barCharListDat[,i]$conditions_list))
}
for(i in 1:length(dim(barCharListDat))){
barCharDatList[[i]] <- getBarChartDat(c(barCharListDat[,i]$descriptions), c(barCharListDat[,i]$conditions_list))
}
runApp()
runApp()
runApp()
runApp()
l1 <- list('a' = 1)
l2 <- list('a' = 2)
l12 <- rbind(l1,l2)
l12
l3 <- list('a' = 3)
l123 <- rbind(l1,l2,l3)
l123
l123 <- rbind(l1, l2)
l123 <- rbind(l123,l3)
l12
l123
l4 <- list('b' = 4)
l123 <- rbind(l123, l4)
l123
runApp()
desc1 <- "abc"
list1 <- list("abc - 1", "abcd - 1", "abd -1")
for(l in list1){
if(desc1 %in% list1){
print("true")
}
}
for(l in list1){
if(desc1 %in% list1){
print("true")
}
}
for(l in list1){
if(desc1 %in% l){
print("true")
}
}
runApp()
install.packages("shinythemes")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
theList <- list("mdx mice Gastic sample 35-plex  3-18-16 <--> MDX",
"mdx mice Gastic sample 35-plex  3-18-16 <--> NORMAL",
"mdx mice Gastic sample 35-plex  3-18-16 <--> MDX/1973(0.3)",
"mdx mice Gastic sample 35-plex  3-18-16 <--> MDX/1973 (1)",
"mdx mice Gastic sample 35-plex  3-18-16 <--> MDX/1973 (3)",
"mdx  mice diaphragm sample 35-plex  3-18-16 <--> MDX",
"mdx  mice diaphragm sample 35-plex  3-18-16 <--> MDX/1973 (3)",
"mdx  mice diaphragm sample 35-plex  3-18-16 <--> MDX/1973(0.3)",
"mdx  mice diaphragm sample 35-plex  3-18-16 <--> MDX/TADANAFIL (5)",
"mdx mice Gastic sample 35-plex  3-18-16 <--> MDX/TADANAFIL (5)")
lapply(theList, function(x){sub("(.*?)( <--> )(.*?)","\\3", x)})
lapply(theList, function(x){list(sub("(.*?)( <--> )(.*?)","\\1", x) = sub("(.*?)( <--> )(.*?)","\\3", x))})
lapply(theList, function(x){list(sub("(.*?)( <--> )(.*?)","\\1", x) = sub("(.*?)( <--> )(.*?)","\\3", x))})
lapply(theList, function(x){list(sub("(.*?)( <--> )(.*?)","\\1", x))})
lapply(theList, function(x){sub("(.*?)( <--> )(.*?)","\\1", x)})
theList <- c("mdx mice Gastic sample 35-plex  3-18-16 <--> MDX",
"mdx mice Gastic sample 35-plex  3-18-16 <--> NORMAL",
"mdx mice Gastic sample 35-plex  3-18-16 <--> MDX/1973(0.3)",
"mdx mice Gastic sample 35-plex  3-18-16 <--> MDX/1973 (1)",
"mdx mice Gastic sample 35-plex  3-18-16 <--> MDX/1973 (3)",
"mdx  mice diaphragm sample 35-plex  3-18-16 <--> MDX",
"mdx  mice diaphragm sample 35-plex  3-18-16 <--> MDX/1973 (3)",
"mdx  mice diaphragm sample 35-plex  3-18-16 <--> MDX/1973(0.3)",
"mdx  mice diaphragm sample 35-plex  3-18-16 <--> MDX/TADANAFIL (5)",
"mdx mice Gastic sample 35-plex  3-18-16 <--> MDX/TADANAFIL (5)")
lapply(theList, function(x){sub("(.*?)( <--> )(.*?)","\\1", x)})
list(lapply(theList, function(x){sub("(.*?)( <--> )(.*?)","\\1", x)}) = lapply(theList, function(x){sub("(.*?)( <--> )(.*?)","\\3", x)}))
l1 <- lapply(theList, function(x){sub("(.*?)( <--> )(.*?)","\\1", x)})
l2 <- lapply(theList, function(x){sub("(.*?)( <--> )(.*?)","\\3", x)})
l1
l2
ulist(l1)
unlist(l1)
l1 <- unlist(lapply(theList, function(x){sub("(.*?)( <--> )(.*?)","\\1", x)}))
l2 <- unlist(lapply(theList, function(x){sub("(.*?)( <--> )(.*?)","\\3", x)}))
l1
l2
list(l1 = l2)
l3 <- list(l1 = l2)
l3
class(l3)
dim(l3)
length(l3)
l1
l2
l3 <- sapply(l1, function(x){list(x = l2)})
l3
l3 <- rbind(l1, l2)
l3
View(l3)
melt(l3)
l3 <- cbind(l1, l2)
l3
l3 <- dcast(ls, l1~l2)
l1
l1 <- unlist(lapply(theList, function(x){sub("(.*?)( <--> )(.*?)","\\1", x)}))
l1
l2 <- unlist(lapply(theList, function(x){sub("(.*?)( <--> )(.*?)","\\3", x)}))
l2
l2 <- unlist(lapply(theList, function(x){sub("(.*?<--> )","", x)}))
l2
l1 <- unlist(lapply(theList, function(x){sub("( <--> .*?)","", x)}))
l1
l1 <- unlist(lapply(theList, function(x){sub("( <--> .*)","", x)}))
l1
l3 <- cbind(l1,l2)
l3
dcast(l3, l1~l2)
library(reshape)
cast(l3, l1~l2)
l3
class(l3)
l3[1]
l3[2]
l3[12]
rbind(l1,l2)
l3 <- list(l1 = l2)
l3
l1
l2
runApp()
l1
l2
l3 <- data.frame(l1,l2)
l3
dcast(l3, l1~l2)
cast(l3, l1~l2)
melt(l3)
reshape(l3, idvar = l1, timevar = l2, direction = "wide")
reshape(l3, idvar = "l1", timevar = "l2", direction = "wide")
reshape(l3, idvar = "l2", timevar = "l1", direction = "wide")
aggregate(l3, l1~l2)
aggregate(l3, l1~l2, FUN = NULL)
l <- list()
for(i in 1:length(l1)){
l <- list(l, l1[i] = l2[2])
}
for(i in 1:length(l1)){
l <- list(l, l1[i])
}
l
for(i in 1:length(l1)){
l <- list(l1[i] = l2[i])
}
for(i in 1:length(l1)){
list(l1[i] = l2[i])
}
t(l3)
theDescs <- c('mdx mice Gastic sample 35-plex  3-18-16', 'mdx  mice diaphragm sample 35-plex  3-18-16')
length(l1) == length(l2)
l1
list('a' = 1)
list1 <- list('a' = 1)
list(list1, 'a' = 1)
list2 <- list(list1, 'a' = 1)
list2
list1
attributes(l3)
l3
group_by(l3, l1)
mtcars
l3 %>% group_by(l1)
l3 %>% group_by(l2)
runApp()
names(l1)
l1
for(i in 1:length(theDescs)){
df[theDescs[i]] <- NA
}
df <- data.frame()
for(i in 1:length(theDescs)){
df[theDescs[i]] <- NA
}
for(i in 1:length(theDescs)){
df[,theDescs[i]] <- NA
}
df[,theDescs] <- NA
df[theDescs] <- NA
df[theDescs] <- NA
df <- data.frame()
df
df[,theDescs] <- NA
df
df[,"theDescs"] <- NA
l1
l2
getConditionsList <- function(experiment) {
conditionsList <- list()
for(i in 1:length(l1)){
if(experiment == l1[i]){
conditionsList <- list(conditionsList, l2[i])
}
}
}
getlisttest <- getConditionsList('"mdx mice Gastic sample 35-plex  3-18-16 <--> MDX/1973 (3)')
getlisttest
l1 <- unlist(lapply(theList, function(x){sub("( <--> .*)","", x)}))
l2 <- unlist(lapply(theList, function(x){sub("(.*?<--> )","", x)}))
l1
length(l1) - length(l2)
getConditionsList <- function(experiment) {
conditionsList <- list()
for(i in 1:length(l1)){
if(experiment == l1[i]){
conditionsList <- list(conditionsList, l2[i])
}
}
return(conditionsList)
}
getlisttest <- getConditionsList('"mdx mice Gastic sample 35-plex  3-18-16 <--> MDX/1973 (3)')
getlisttest
print(getlisttest)
getlisttest[1]
getlisttest <- getConditionsList('mdx mice Gastic sample 35-plex  3-18-16 <--> MDX/1973 (3)')
getlisttest
getlisttest[1]
getlisttest <- getConditionsList('mdx mice Gastic sample 35-plex  3-18-16')
getlisttest
dim(getlisttest)
length(getlisttest)
getlisttest[1]
getlisttest[2]
getlisttest[3]
getConditionsList <- function(experiment) {
conditionsList <- list()
for(i in 1:length(l1)){
if(experiment == l1[i]){
conditionsList[i] <- l2[i]
}
}
return(conditionsList)
}
getlisttest <- getConditionsList('mdx mice Gastic sample 35-plex  3-18-16')
getlisttest
getConditionsList <- function(experiment) {
conditionsList <- list()
for(i in 1:length(l1)){
if(experiment %in% l1[i]){
conditionsList[i] <- l2[i]
}
}
return(conditionsList)
}
getlisttest <- getConditionsList('mdx mice Gastic sample 35-plex  3-18-16')
getlisttest
Filter(Negate(is.null), getlisttest)
getConditionsList <- function(experiment) {
conditionsList <- list()
for(i in 1:length(l1)){
if(experiment %in% l1[i]){
conditionsList[i] <- l2[i]
}
}
conditionsList <- Filter(Negate(is.null), conditionsList)
return(conditionsList)
}
getlisttest <- getConditionsList('mdx mice Gastic sample 35-plex  3-18-16')
getlisttest
getlisttest[[1]]
shiny::runApp()
runApp()
runApp()
l1
runApp()
runApp()
getConditionsList <- function(experiment) {
conditionsList <- list()
for(i in 1:length(l1)){
if(experiment == l1[i]){
conditionsList[i] <- l2[i]
}
}
conditionsList <- Filter(Negate(is.null), conditionsList)
return(conditionsList)
}
getlisttest <- getConditionsList('mdx mice Gastic sample 35-plex  3-18-16')
getlisttest
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/ywen/OneDrive - Ironwood Pharmaceuticals/B_DNA Project/B_DNA_Webapp/R Shiny/test')
runApp('C:/Users/ywen/OneDrive - Ironwood Pharmaceuticals/B_DNA Project/B_DNA_Webapp/R Shiny/test')
runApp()
runApp()
runApp()
runApp()
runApp()
dat <- gene_expression %>% inner_join(gene, by = c('gene_id' = 'id')) %>%
inner_join(experiment, by = c('experiment_id' = 'id')) %>%
inner_join(condition, by = c('condition_id' = 'id'))
View(dat)
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/ywen/OneDrive - Ironwood Pharmaceuticals/B_DNA Project/B_DNA_Webapp/R Shiny/test')
runApp('C:/Users/ywen/OneDrive - Ironwood Pharmaceuticals/B_DNA Project/B_DNA_Webapp/R Shiny/test')
runApp()
dat <- gene_expression %>% inner_join(gene, by = c('gene_id' = 'id')) %>%
inner_join(experiment, by = c('experiment_id' = 'id')) %>%
inner_join(condition, by = c('condition_id' = 'id')) %>%
filter(description == experiments[i] & name.y %in% conditions[[i]] & name.x == input$gene) %>%
select(expression, name.y)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/ywen/OneDrive - Ironwood Pharmaceuticals/B_DNA Project/B_DNA_Webapp/R Shiny/test')
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/ywen/OneDrive - Ironwood Pharmaceuticals/B_DNA Project/B_DNA_Webapp/R Shiny/test')
runApp('C:/Users/ywen/OneDrive - Ironwood Pharmaceuticals/B_DNA Project/B_DNA_Webapp/R Shiny/test')
runApp('C:/Users/ywen/OneDrive - Ironwood Pharmaceuticals/B_DNA Project/B_DNA_Webapp/R Shiny/test')
runApp()
runApp()
runApp()
runApp('C:/Users/ywen/OneDrive - Ironwood Pharmaceuticals/B_DNA Project/B_DNA_Webapp/R Shiny/test')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/ywen/OneDrive - Ironwood Pharmaceuticals/B_DNA Project/B_DNA_Webapp/R Shiny/test')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/ywen/OneDrive - Ironwood Pharmaceuticals/B_DNA Project/B_DNA_Webapp/R Shiny/test')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install_github("easyGgplot2", "kassambara")
library(devtools)
install_github("easyGgplot2", "kassambara")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
